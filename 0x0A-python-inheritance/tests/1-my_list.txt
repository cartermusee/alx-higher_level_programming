The ``1-my_list`` module
============================

Using ``1-mylist``
---------------------

Import function from module:
    >>> MyList = __import__('1-my_list').MyList

using it:
    >>> l = MyList()
    >>> type(l) == MyList
    True

    >>> l = MyList()
    >>> isinstance(l, list)
    True

    >>> type(MyList.__dict__['print_sorted'])
    <class 'function'>

    >>> l = MyList()
    >>> l.print_sorted()
    []

    >>> l = MyList([4, 3, 6, 5, 11, 2])
    >>> l.print_sorted()
    [2, 3, 4, 5, 6, 11]

    >>> l = MyList([-3, -10, -1, 0])
    >>> l.print_sorted()
    [-10, -3, -1, 0]

    >>> l = MyList([1, 4, 3, 2])
    >>> l.print_sorted()
    [1, 2, 3, 4]
    >>> l
    [1, 4, 3, 2]

    >>> l.print_sorted([3, 5, 8], 2)
    Traceback (most recent call last):
    TypeError: print_sorted() takes 1 positional argument but 3 were given

    >>> l.print_sorted([3, 6, 7])
    Traceback (most recent call last):
    TypeError: print_sorted() takes 1 positional argument but 2 were given

    >>> l.__class__.print_sorted()
    Traceback (most recent call last):
    TypeError: print_sorted() missing 1 required positional argument: 'self'
